{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Georgia;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Consolas;\f4\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red10\green92\blue255;
\red0\green0\blue0;\red246\green246\blue239;\red34\green34\blue34;\red157\green101\blue255;\red88\green209\blue235;
\red224\green213\blue97;\red100\green108\blue125;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c46667\c100000;
\cssrgb\c0\c0\c0\c7451;\cssrgb\c97255\c97255\c94902;\cssrgb\c17647\c17647\c17647;\cssrgb\c68235\c50588\c100000;\cssrgb\c40000\c85098\c93725;
\cssrgb\c90196\c85882\c45490;\cssrgb\c46667\c50196\c56471;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid203\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li840\ri840\sl860\sa400\partightenfactor0

\f0\b\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Intro Algorithms and Data Structures\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 If you need a refresher on algorithms and data structures, refer to the\'a0{\field{\*\fldinst{HYPERLINK "https://open.appacademy.io/learn/full-stack-online/ruby/intro-to-algorithms-and-data-structures"}}{\fldrslt \cf4 \strokec4 reading}}!\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 Learning Goals\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls1\ilvl0
\f1\b0\fs40 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Know how to implement a polytree using polytree nodes\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Know how to implement BFS and DFS for your polytree\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Be able to explain the differences between BFS and DFS and when one might be preferred\cb1 \
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 \cb3 Phase 0: Description\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 Download\'a0{\field{\*\fldinst{HYPERLINK "https://assets.aaonline.io/fullstack/ruby/projects/poly_tree_node/skeleton.zip"}}{\fldrslt \cf4 \strokec4 this skeleton}}.\
Write a class named\'a0
\f2 \cb5 PolyTreeNode
\f1 \cb3 \'a0which represents a node in a tree. We'll write a tree node class that can have an arbitrary number of children (not just two left/right children). It should have the following interface:\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 Phase 1: Implement a PolyTreeNode class\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls2\ilvl0
\f1\b0\fs40 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write a class with four methods:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl440\sa100\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 An\'a0
\f2 \cb5 #initialize(value)
\f1 \cb3 \'a0method that sets the value, and starts\'a0
\f2 \cb5 parent
\f1 \cb3 \'a0as nil, and\'a0
\f2 \cb5 children
\f1 \cb3 \'a0to an empty array.\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A\'a0
\f2 \cb5 #parent
\f1 \cb3 \'a0method that returns the node's parent.\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A\'a0
\f2 \cb5 #children
\f1 \cb3 \'a0method that returns an array of children of a node.\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A\'a0
\f2 \cb5 #value
\f1 \cb3 \'a0method that returns the value stored at the node.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write a\'a0
\f2 \cb5 #parent=
\f1 \cb3 \'a0method which (1) sets the parent property and (2) adds the node to their parent's array of children (unless we're setting parent to\'a0
\f2 \cb5 nil
\f1 \cb3 ).\cb1 \
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0
\cf2 \cb3 Run\'a0
\f2 \cb5 bundle exec rspec
\f1 \cb3 \'a0to run the provided tests. At this point, all the specs for\'a0
\f2 \cb5 #initialize
\f1 \cb3 \'a0and most of the specs for\'a0
\f2 \cb5 #parent=
\f1 \cb3 \'a0should pass. (We'll get to the other specs soon!)\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 Phase 2: Re-assigning Parents\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 Your\'a0
\f2 \cb5 #parent=
\f1 \cb3 \'a0code likely leaves a mess when re-assigning a parent. Here's what I mean:\
\pard\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf6 \cb7 \strokec6 n1 
\f4 =
\f3  
\f4 \cf8 \strokec8 PolyTreeNode\cf6 \strokec6 .\cf9 \strokec9 new\cf6 \strokec6 (\cf10 \strokec10 "root1"\cf6 \strokec6 )
\f3 \
n2 
\f4 =
\f3  
\f4 \cf8 \strokec8 PolyTreeNode\cf6 \strokec6 .\cf9 \strokec9 new\cf6 \strokec6 (\cf10 \strokec10 "root2"\cf6 \strokec6 )
\f3 \
n3 
\f4 =
\f3  
\f4 \cf8 \strokec8 PolyTreeNode\cf6 \strokec6 .\cf9 \strokec9 new\cf6 \strokec6 (\cf10 \strokec10 "root3"\cf6 \strokec6 )
\f3 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f4 \cf11 \strokec11 # connect n3 to n1
\f3 \cf6 \strokec6 \
n3
\f4 .
\f3 parent 
\f4 =
\f3  n1\

\f4 \cf11 \strokec11 # connect n3 to n2
\f3 \cf6 \strokec6 \
n3
\f4 .
\f3 parent 
\f4 =
\f3  n2\
\

\f4 \cf11 \strokec11 # this should work
\f3 \cf6 \strokec6 \
\pard\pardeftab720\sl480\partightenfactor0

\f4 \cf9 \strokec9 raise
\f3 \cf6 \strokec6  
\f4 \cf10 \strokec10 "Bad parent=!"
\f3 \cf6 \strokec6  
\f4 \cf9 \strokec9 unless
\f3 \cf6 \strokec6  n3
\f4 .
\f3 parent 
\f4 ==
\f3  n2\

\f4 \cf9 \strokec9 raise
\f3 \cf6 \strokec6  
\f4 \cf10 \strokec10 "Bad parent=!"
\f3 \cf6 \strokec6  
\f4 \cf9 \strokec9 unless
\f3 \cf6 \strokec6  n2
\f4 .
\f3 children 
\f4 ==
\f3  
\f4 [
\f3 n3
\f4 ]
\f3 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f4 \cf11 \strokec11 # this probably doesn't
\f3 \cf6 \strokec6 \
\pard\pardeftab720\sl480\partightenfactor0

\f4 \cf9 \strokec9 raise
\f3 \cf6 \strokec6  
\f4 \cf10 \strokec10 "Bad parent=!"
\f3 \cf6 \strokec6  
\f4 \cf9 \strokec9 unless
\f3 \cf6 \strokec6  n1
\f4 .
\f3 children 
\f4 ==
\f3  
\f4 []
\f3 \
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\fs40 \cf2 \cb3 \strokec2 In addition to (1) re-assigning the parent attribute of the child and (2) adding it to the new parent's array of children, we should also\'a0
\b remove
\b0 \'a0the child from the\'a0
\b old
\b0 \'a0parent's list of children (if the old parent isn't\'a0
\f2 \cb5 nil
\f1 \cb3 ). Modify your\'a0
\f2 \cb5 #parent=
\f1 \cb3 \'a0method to do this.\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\b \cf2 Make sure all the\'a0
\f2\b0 \cb5 #parent=
\f1\b \cb3 \'a0specs pass before proceeding!
\b0 \
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 Phase 3: Adding Children\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 The easiest phase!\
Write\'a0
\f2 \cb5 add_child(child_node)
\f1 \cb3 \'a0and\'a0
\f2 \cb5 remove_child(child_node)
\f1 \cb3 \'a0methods. These methods should be one- or two-liners that call\'a0
\f2 \cb5 #parent=
\f1 \cb3 .\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 Phase 4: Searching\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls3\ilvl0
\f1\b0\fs40 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write a\'a0
\f2 \cb5 #dfs(target_value)
\f1 \cb3 \'a0method which takes a value to search for and performs the search. Write this recursively.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl440\sa100\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 First, check the value at this node. If a node's value matches the target value, return the node.\cb1 \
\ls3\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If not, iterate through the\'a0
\f2 \cb5 #children
\f1 \cb3 \'a0and repeat.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write a\'a0
\f2 \cb5 #bfs(target_value)
\f1 \cb3 \'a0method to implement breadth first search.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl440\sa100\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You will use a local\'a0
\f2 \cb5 Array
\f1 \cb3 \'a0variable as a queue to implement this.\cb1 \
\ls3\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 First, insert the current node (
\f2 \cb5 self
\f1 \cb3 ) into the queue.\cb1 \
\ls3\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Then, in a loop that runs until the array is empty:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl440\sa100\partightenfactor0
\ls3\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Remove the first node from the queue,\cb1 \
\ls3\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check its value,\cb1 \
\ls3\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Push the node's children to the end of the array.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prove to yourself that this will check the nodes in the right order. Draw it out.\'a0
\b Show this explanation to your TA.
\b0 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Get your TA to check your work!\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make sure\'a0
\b all
\b0 \'a0the specs pass.\cb1 \
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 \cb3 References\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls4\ilvl0
\f1\b0\fs40 \cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://open.appacademy.io/learn/full-stack-online/ruby/inspecting-complex-elements"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Overriding inspect}}\cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls4\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wikipedia:\'a0{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Data_structure"}}{\fldrslt \cf4 \strokec4 Data structure}}\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wikipedia:\'a0{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Algorithm"}}{\fldrslt \cf4 \strokec4 Algorithm}}\cb1 \
}