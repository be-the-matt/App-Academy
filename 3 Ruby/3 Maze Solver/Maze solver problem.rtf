{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red10\green92\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c46667\c100000;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li840\ri840\sl860\sa400\partightenfactor0

\f0\b\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Maze solver\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 In this exercise, we want to write a program that will find a route between two points in a maze.\
Here's an example\'a0{\field{\*\fldinst{HYPERLINK "https://assets.aaonline.io/fullstack/ruby/projects/maze_solver/maze1.txt"}}{\fldrslt \cf4 \strokec4 maze}}. It has an 'S' for the start point, and an 'E' for an end point.\
You should write a program that will read in the maze, try to explore a path through it to the end, and then print out a completed path\'a0{\field{\*\fldinst{HYPERLINK "https://assets.aaonline.io/fullstack/ruby/projects/maze_solver/maze1_solution.txt"}}{\fldrslt \cf4 \strokec4 like so}}. If there is no such path, it should inform the user.\
Make your program run as a command line script, taking in the name of a maze file on the command line.\
Your path through the maze should not be self-intersecting, of course.\
When you have found a first solution, write a version which will be sure to find the\'a0
\i shortest path
\i0 \'a0through the maze.\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\f0\b\fs60 \cf2 Resources\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\fs40 \cf2 NB
\b0 : Try taking a naive approach first. Once you've got something working read on...\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl440\sa100\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reading Files\'a0{\field{\*\fldinst{HYPERLINK "http://progzoo.net/wiki/Ruby:Read_a_Text_File"}}{\fldrslt \cf4 \strokec4 progzoo}}\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Simple-ish explanation for computer pathfinding, start at "Starting the Search" heading\'a0{\field{\*\fldinst{HYPERLINK "http://archive.gamedev.net/archive/reference/articles/article2003.html"}}{\fldrslt \cf4 \strokec4 a-star}}\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wikipedia: maze shortest path\'a0{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Maze_solving_algorithm#Shortest_path_algorithm"}}{\fldrslt \cf4 \strokec4 wikipedia}}\cb1 \
}