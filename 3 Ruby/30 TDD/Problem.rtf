{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Georgia;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red246\green246\blue239;
\red34\green34\blue34;\red157\green101\blue255;\red100\green108\blue125;\red10\green92\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c0\c7451;\cssrgb\c97255\c97255\c94902;
\cssrgb\c17647\c17647\c17647;\cssrgb\c68235\c50588\c100000;\cssrgb\c46667\c50196\c56471;\cssrgb\c0\c46667\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww8200\viewh20180\viewkind0
\deftab720
\pard\pardeftab720\li840\ri840\sl860\sa400\partightenfactor0

\f0\b\fs72 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test Driven Development\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\fs60 \cf2 Learning Goals\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl680\sa100\partightenfactor0
\ls1\ilvl0
\f1\b0\fs40 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Be able to explain what functionality your testing will cover\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Know the hierarchy / syntax of RSpec methods (
\f2 \cb3 describe
\f1 \cb1 ,\'a0
\f2 \cb3 before
\f1 \cb1 ,\'a0
\f2 \cb3 let
\f1 \cb1 ,\'a0
\f2 \cb3 it
\f1 \cb1 ,\'a0
\f2 \cb3 expect
\f1 \cb1 , etc.)\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Be comfortable writing RSpec tests\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Know when to use\'a0
\f2 \cb3 let
\f1 \cb1 \'a0and\'a0
\f2 \cb3 subject
\f1 \cb1 \
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\b \cf2 Expected time: 2hrs
\b0 \
Do all of the following exercises TDD. That means writing specs\'a0
\b first
\b0 !\
When approaching each problem, make sure to:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl680\sa100\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Read the entire problem statement.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Talk with your partner to identify test cases and key functionality to expect from your code.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write RSpec tests.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write the method you now have tests for. Follow the red-green-refactor approach until all specs pass.\
\pard\pardeftab720\li840\ri840\sl560\sa400\partightenfactor0

\f0\b\fs48 \cf2 \
Remove dups\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 Array has a\'a0
\f2 \cb3 uniq
\f1 \cb1 \'a0method that removes duplicates from an array. It returns the unique elements in the order in which they first appeared:\
\pard\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf4 \cb5 \strokec4 [\cf6 \strokec6 1\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 2\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 1\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 3\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 3\cf4 \strokec4 ].
\f4 uniq 
\f3 \cf7 \strokec7 # => [1, 2, 3]
\f4 \cf4 \strokec4 \
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\fs40 \cf2 \cb1 \strokec2 Write your own version of this method called\'a0
\f2 \cb3 my_uniq
\f1 \cb1 ; it should take in an Array and return a new array.\
\pard\pardeftab720\li840\ri840\sl560\sa400\partightenfactor0

\f0\b\fs48 \cf2 Two sum\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 Write a new\'a0
\f2 \cb3 Array#two_sum
\f1 \cb1 \'a0method that finds all pairs of positions where the elements at those positions sum to zero.\
NB: ordering matters. We want each of the pairs to be sorted smaller index before bigger index. We want the array of pairs to be sorted "dictionary-wise":\
\pard\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf4 \cb5 \strokec4 [-\cf6 \strokec6 1\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 0\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 2\cf4 \strokec4 ,
\f4  
\f3 -\cf6 \strokec6 2\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 1\cf4 \strokec4 ].
\f4 two_sum 
\f3 \cf7 \strokec7 # => [[0, 4], [2, 3]]
\f4 \cf4 \strokec4 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl680\sa100\partightenfactor0
\ls3\ilvl0
\f2\fs40 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [0, 2]
\f1 \cb1 \'a0before\'a0
\f2 \cb3 [2, 1]
\f1 \cb1 \'a0(smaller first elements come first)\
\ls3\ilvl0
\f2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [0, 1]
\f1 \cb1 \'a0before\'a0
\f2 \cb3 [0, 2]
\f1 \cb1 \'a0(then smaller second elements come first)\
\pard\pardeftab720\li840\ri840\sl560\sa400\partightenfactor0

\f0\b\fs48 \cf2 \
My Transpose\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 To represent a\'a0
\i matrix
\i0 , or two-dimensional grid of numbers, we can write an array containing arrays which represent rows:\
\pard\pardeftab720\sl480\partightenfactor0

\f4\fs32 \cf4 \cb5 \strokec4 rows 
\f3 =
\f4  
\f3 [
\f4 \
    
\f3 [\cf6 \strokec6 0\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 1\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 2\cf4 \strokec4 ],
\f4 \
    
\f3 [\cf6 \strokec6 3\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 4\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 5\cf4 \strokec4 ],
\f4 \
    
\f3 [\cf6 \strokec6 6\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 7\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 8\cf4 \strokec4 ]
\f4 \
  
\f3 ]
\f4 \
\
row1 
\f3 =
\f4  rows
\f3 [\cf6 \strokec6 0\cf4 \strokec4 ]
\f4 \
row2 
\f3 =
\f4  rows
\f3 [\cf6 \strokec6 1\cf4 \strokec4 ]
\f4 \
row3 
\f3 =
\f4  rows
\f3 [\cf6 \strokec6 2\cf4 \strokec4 ]
\f4 \
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\fs40 \cf2 \cb1 \strokec2 We could equivalently have stored the matrix as an array of columns:\
\pard\pardeftab720\sl480\partightenfactor0

\f4\fs32 \cf4 \cb5 \strokec4 cols 
\f3 =
\f4  
\f3 [
\f4 \
    
\f3 [\cf6 \strokec6 0\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 3\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 6\cf4 \strokec4 ],
\f4 \
    
\f3 [\cf6 \strokec6 1\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 4\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 7\cf4 \strokec4 ],
\f4 \
    
\f3 [\cf6 \strokec6 2\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 5\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 8\cf4 \strokec4 ]
\f4 \
  
\f3 ]
\f4 \
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\fs40 \cf2 \cb1 \strokec2 Write a method,\'a0
\f2 \cb3 my_transpose
\f1 \cb1 , which will convert between the row-oriented and column-oriented representations. You may assume square matrices for simplicity's sake. Usage will look like the following:\
\pard\pardeftab720\sl480\partightenfactor0

\f4\fs32 \cf4 \cb5 \strokec4 my_transpose
\f3 ([
\f4 \
    
\f3 [\cf6 \strokec6 0\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 1\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 2\cf4 \strokec4 ],
\f4 \
    
\f3 [\cf6 \strokec6 3\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 4\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 5\cf4 \strokec4 ],
\f4 \
    
\f3 [\cf6 \strokec6 6\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 7\cf4 \strokec4 ,
\f4  
\f3 \cf6 \strokec6 8\cf4 \strokec4 ]
\f4 \
  
\f3 ])
\f4 \
 
\f3 \cf7 \strokec7 # => [[0, 3, 6],
\f4 \cf4 \strokec4 \
 
\f3 \cf7 \strokec7 #    [1, 4, 7],
\f4 \cf4 \strokec4 \
 
\f3 \cf7 \strokec7 #    [2, 5, 8]]
\f4 \cf4 \strokec4 \
\pard\pardeftab720\li840\ri840\sl560\sa400\partightenfactor0

\f0\b\fs48 \cf2 \cb1 \strokec2 \
Stock Picker\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 Write a method that takes an array of stock prices (prices on days 0, 1, ...), and outputs the most profitable pair of days on which to first buy the stock and then sell the stock. Remember, you can't sell stock before you buy it!\
\pard\pardeftab720\li840\ri840\sl560\sa400\partightenfactor0

\f0\b\fs48 \cf2 Towers of Hanoi\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\f1\b0\fs40 \cf2 Write a\'a0{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Towers_of_hanoi"}}{\fldrslt \cf8 \strokec8 Towers of Hanoi}}\'a0game.\
Keep three arrays, which represents the piles of discs. Pick a representation of the discs to store in the arrays; maybe just a number representing their size. Don't worry too much about making the user interface pretty.\
In a loop, prompt the user (using\'a0{\field{\*\fldinst{HYPERLINK "http://andreacfm.com/ruby/2011/06/11/learning-ruby-gets-and-chomp.html"}}{\fldrslt \cf8 \strokec8 gets}}) and ask what pile to select a disc from, and where to put it.\
After each move, check to see if they have succeeded in moving all the discs, to the final pile. If so, they win!\
\pard\pardeftab720\li840\ri840\sl600\sa400\partightenfactor0

\b \cf2 Note:
\b0 \'a0don't worry about testing the UI. Testing console I/O is tricky (don't bother checking\'a0
\f2 \cb3 gets
\f1 \cb1 \'a0or\'a0
\f2 \cb3 puts
\f1 \cb1 ). Focus on:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl680\sa100\partightenfactor0
\ls4\ilvl0
\f2 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #move
\f1 \cb1 \
\ls4\ilvl0
\f2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #won?
\f1 \cb1 \
\pard\pardeftab720\li840\ri840\sl560\sa400\partightenfactor0

\f0\b\fs48 \cf2 Get a code review from a TA\
\pard\pardeftab720\li840\ri840\sl720\sa400\partightenfactor0

\fs60 \cf2 Resources\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl680\sa100\partightenfactor0
\ls5\ilvl0
\f1\b0\fs40 \cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "http://www.ruby-doc.org/core-2.1.2/Array.html"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Ruby Doc on Array}}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls5\ilvl0\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "http://zetcode.com/lang/rubytutorial/arrays/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Ruby Array Article}}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}